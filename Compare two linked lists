import java.io.*;

class SinglyLinkedListNode {
    public int data;
    public SinglyLinkedListNode next;

    public SinglyLinkedListNode(int nodeData) {
        this.data = nodeData;
        this.next = null;
    }
}

class Result {
    public static int compare_lists(SinglyLinkedListNode llist1, SinglyLinkedListNode llist2) {
        // Traverse both lists and compare the data in their nodes
        while (llist1 != null && llist2 != null) {
            if (llist1.data != llist2.data) {
                return 0; // Data in nodes are not equal
            }
            llist1 = llist1.next;
            llist2 = llist2.next;
        }
        
        // Check if both lists have been traversed completely
        if (llist1 == null && llist2 == null) {
            return 1; // All data attributes are equal and lists are the same length
        } else {
            return 0; // Lists are not the same length
        }
    }
}

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int tests = Integer.parseInt(bufferedReader.readLine().trim());

        while (tests-- > 0) {
            int llist1Count = Integer.parseInt(bufferedReader.readLine().trim());
            SinglyLinkedListNode head1 = null;
            SinglyLinkedListNode tail1 = null;
            for (int i = 0; i < llist1Count; i++) {
                int data = Integer.parseInt(bufferedReader.readLine().trim());
                SinglyLinkedListNode node = new SinglyLinkedListNode(data);
                if (head1 == null) {
                    head1 = node;
                } else {
                    tail1.next = node;
                }
                tail1 = node;
            }

            int llist2Count = Integer.parseInt(bufferedReader.readLine().trim());
            SinglyLinkedListNode head2 = null;
            SinglyLinkedListNode tail2 = null;
            for (int i = 0; i < llist2Count; i++) {
                int data = Integer.parseInt(bufferedReader.readLine().trim());
                SinglyLinkedListNode node = new SinglyLinkedListNode(data);
                if (head2 == null) {
                    head2 = node;
                } else {
                    tail2.next = node;
                }
                tail2 = node;
            }

            int result = Result.compare_lists(head1, head2);
            System.out.println(result);
        }

        bufferedReader.close();
    }
}
